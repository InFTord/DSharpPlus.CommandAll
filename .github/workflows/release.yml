name: Release
on:
  release:
    types: ["published"]

env:
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1

jobs:
  release:
    name: Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8
      - name: Nuget Packages
        run: |
          mkdir build
          dotnet pack -c Release -o build /p:Version=${{ github.event.release.tag_name }}
          dotnet nuget push "build/*" --skip-duplicate -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
          dotnet tool update -g docfx --prerelease
          docfx docs/docfx.json
      - name: Upload Nuget Packages To Github Actions
        uses: actions/upload-artifact@v3
        with:
          name: DSharpPlus.CommandAll-${{ github.event.release.tag_name }}.zip
          path: build/*
      - name: Upload Nuget Packages To Github Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: build/*
          token: ${{ secrets.GITHUB_TOKEN }}
          omitNameDuringUpdate: true # We don't want to update the name of the release.
          omitBodyDuringUpdate: true # We don't want to update the body of the release.
  document:
    name: Document Release
    runs-on: ubuntu-latest
    needs: release
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/_site/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1